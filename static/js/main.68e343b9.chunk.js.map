{"version":3,"sources":["redux/selectors.js","redux/operations.js","components/contactForm/ContactForm.styled.js","components/contactForm/ContactForm.jsx","components/contactList/ContactList.styled.js","components/contactList/ContactList.jsx","redux/filterSlice.js","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/App/App.styled.js","components/App/App.jsx","redux/contactSlice.js","redux/store.js","index.js"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","createSelector","filter","contact","name","toLowerCase","includes","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_ref2","asyncToGenerator","_callee","_","_ref","rejectWithValue","response","_context","get","data","t0","message","_x","_x2","apply","arguments","addContacts","_ref4","_callee2","formState","_ref3","_context2","post","phone","_x3","_x4","deleteContacts","_ref6","_callee3","contactId","_ref5","_context3","delete","concat","_x5","_x6","Form","styled","form","_templateObject","taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","initialFormState","formReducer","action","objectSpread","field","payload","ContactForm","dispatch","useDispatch","useSelector","_useReducer","useReducer","_useReducer2","slicedToArray","setFormState","handleTextChange","e","target","react_default","a","createElement","onSubmit","preventDefault","find","alert","onChange","pattern","title","required","List","ul","ContactList_styled_templateObject","Item","li","ContactList_styled_templateObject2","ContactList","contactList","map","id","onClick","filterSlice","createSlice","initialState","reducers","setFilterState","filterReducer","reducer","actions","Filter_styled_templateObject","Filter_styled_templateObject2","Filter","Filter_styled_Label","Filter_styled_Input","currentTarget","Container","div","App_styled_templateObject","Title","h1","App_styled_templateObject2","SecondTitle","h2","App_styled_templateObject3","App","useEffect","filter_Filter","contactList_ContactList","extraActions","getActions","fetchContactsSucceesReducer","addContactSuccessReducer","deleteContactSuccessReducer","index","findIndex","splice","pendingReducer","rejectedReducer","fulfilledReducer","contactsReducer","extraReducers","builder","addCase","fulfilled","addMatcher","isAnyOf","toConsumableArray","store","configureStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","es"],"mappings":"qOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAEzCC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,WAE1CC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,OAItCC,EAAuBC,YAClC,CAACT,EAHyB,SAAAC,GAAK,OAAIA,EAAMS,OAAOA,SAIhD,SAACR,EAAUQ,GACT,OAAOR,EAASQ,OAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,2CCb1CK,EAAA,kBAAAC,GAAA,IAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAAvB,EAAAwB,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAxE,GAAA,OAAAsE,EAAA,QAAAtE,EAAAoE,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAhD,EAAA,iCAAAoE,EAAAf,GAAA,iBAAArD,EAAA,UAAAkF,MAAA,iDAAAlF,EAAA,cAAAoE,EAAA,MAAAf,EAAA,OAAA8B,IAAA,IAAAnC,EAAAoB,SAAApB,EAAAK,QAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA7B,EAAA,gBAAA6B,GAAA,YAAArC,EAAAoB,OAAApB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAApE,EAAA,MAAAA,EAAA,YAAAgD,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAArD,EAAA,gBAAA6E,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAAtD,EAAAgD,EAAA2C,KAAA,6BAAAd,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAsC,KAAA3C,EAAA2C,MAAA,UAAAd,EAAAvB,OAAAtD,EAAA,YAAAgD,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAoB,EAAAgB,EAAAvD,SAAAmB,EAAAoB,QAAA,QAAAwB,IAAAxB,EAAA,IAAApB,EAAAoC,SAAA,eAAApC,EAAAoB,OAAA,IAAAgB,EAAAvD,SAAAgE,SAAA7C,EAAAoB,OAAA,SAAApB,EAAAK,SAAAuC,EAAAN,EAAAF,EAAApC,GAAA,UAAAA,EAAAoB,QAAA,OAAAZ,EAAAR,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAAyC,UAAA,yDAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAgB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAoC,SAAA,KAAA5B,EAAA,IAAAuC,EAAAlB,EAAAxB,IAAA,OAAA0C,IAAAJ,MAAA3C,EAAAoC,EAAAY,YAAAD,EAAAtE,MAAAuB,EAAAiD,KAAAb,EAAAc,QAAA,WAAAlD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAAuC,GAAA5C,EAAAoC,SAAA,KAAA5B,GAAAuC,GAAA/C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAAyC,UAAA,oCAAA9C,EAAAoC,SAAA,KAAA5B,GAAA,SAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAxC,KAAA8C,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAxB,EAAAwB,EAAAQ,YAAA,GAAAhC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAgD,EAAAQ,WAAAhC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAA8C,WAAA,EAAAJ,OAAA,SAAA3D,EAAAwB,QAAAgC,EAAAvC,WAAAkD,OAAA,YAAA9C,EAAA+C,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAnF,GAAA,GAAAoF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAA/F,EAAAoC,KAAAwD,EAAAI,GAAA,OAAAlB,EAAAxE,MAAAsF,EAAAI,GAAAlB,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAxE,WAAAmE,EAAAK,EAAAN,MAAA,EAAAM,GAAA,OAAAA,UAAA,OAAAA,KAAAd,GAAA,SAAAA,IAAA,OAAA1D,WAAAmE,EAAAD,MAAA,UAAAlC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA2D,YAAAlF,EAAAwB,EAAA1B,EAAA,qBAAAjB,EAAAsG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAA5G,QAAAI,EAAA0G,KAAA,SAAAH,GAAA,OAAArG,OAAAyG,eAAAzG,OAAAyG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAxB,EAAAoF,EAAAtF,EAAA,sBAAAsF,EAAApG,UAAAD,OAAA8B,OAAAkB,GAAAqD,GAAAvG,EAAA6G,MAAA,SAAAvE,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAA7C,EAAAuD,gBAAAvD,EAAA8G,MAAA,SAAArF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAAuD,SAAA,IAAAC,EAAA,IAAAzD,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAAxD,EAAAsG,oBAAA5E,GAAAsF,IAAA9B,OAAAjB,KAAA,SAAAF,GAAA,OAAAA,EAAAa,KAAAb,EAAArD,MAAAsG,EAAA9B,UAAA/B,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAAlD,EAAAiH,KAAA,SAAAC,GAAA,IAAAC,EAAAjH,OAAAgH,GAAAD,EAAA,WAAAzG,KAAA2G,EAAAF,EAAArB,KAAApF,GAAA,OAAAyG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAd,QAAA,KAAA3F,EAAAyG,EAAAI,MAAA,GAAA7G,KAAA2G,EAAA,OAAAjC,EAAAxE,MAAAF,EAAA0E,EAAAN,MAAA,EAAAM,EAAA,OAAAA,EAAAN,MAAA,EAAAM,IAAAlF,EAAAiD,SAAAf,EAAA/B,UAAA,CAAAsG,YAAAvE,EAAA6D,MAAA,SAAAuB,GAAA,GAAAzE,KAAA0E,KAAA,EAAA1E,KAAAqC,KAAA,EAAArC,KAAA2B,KAAA3B,KAAA4B,WAAAI,EAAAhC,KAAA+B,MAAA,EAAA/B,KAAAwB,SAAA,KAAAxB,KAAAQ,OAAA,OAAAR,KAAAP,SAAAuC,EAAAhC,KAAA8C,WAAAvC,QAAAyC,IAAAyB,EAAA,QAAA1H,KAAAiD,KAAA,MAAAjD,EAAA4H,OAAA,IAAApH,EAAAoC,KAAAK,KAAAjD,KAAAsG,OAAAtG,EAAA6H,MAAA,MAAA5E,KAAAjD,QAAAiF,IAAA6C,KAAA,WAAA7E,KAAA+B,MAAA,MAAA+C,EAAA9E,KAAA8C,WAAA,GAAAG,WAAA,aAAA6B,EAAApF,KAAA,MAAAoF,EAAArF,IAAA,OAAAO,KAAA+E,MAAAlD,kBAAA,SAAAmD,GAAA,GAAAhF,KAAA+B,KAAA,MAAAiD,EAAA,IAAA5F,EAAAY,KAAA,SAAAiF,EAAAC,EAAAC,GAAA,OAAAlE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAAuF,EAAA5F,EAAAiD,KAAA6C,EAAAC,IAAA/F,EAAAoB,OAAA,OAAApB,EAAAK,SAAAuC,KAAAmD,EAAA,QAAA5B,EAAAvD,KAAA8C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzC,KAAA8C,WAAAS,GAAAtC,EAAAwB,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAuC,EAAA,UAAAxC,EAAAC,QAAA1C,KAAA0E,KAAA,KAAAU,EAAA7H,EAAAoC,KAAA8C,EAAA,YAAA4C,EAAA9H,EAAAoC,KAAA8C,EAAA,iBAAA2C,GAAAC,EAAA,IAAArF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,MAAA3C,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,iBAAA,GAAAwC,GAAA,GAAApF,KAAA0E,KAAAjC,EAAAE,SAAA,OAAAsC,EAAAxC,EAAAE,UAAA,YAAA0C,EAAA,UAAA/D,MAAA,6CAAAtB,KAAA0E,KAAAjC,EAAAG,WAAA,OAAAqC,EAAAxC,EAAAG,gBAAAd,OAAA,SAAApC,EAAAD,GAAA,QAAA8D,EAAAvD,KAAA8C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzC,KAAA8C,WAAAS,GAAA,GAAAd,EAAAC,QAAA1C,KAAA0E,MAAAnH,EAAAoC,KAAA8C,EAAA,eAAAzC,KAAA0E,KAAAjC,EAAAG,WAAA,KAAA0C,EAAA7C,EAAA,OAAA6C,IAAA,UAAA5F,GAAA,aAAAA,IAAA4F,EAAA5C,QAAAjD,MAAA6F,EAAA1C,aAAA0C,EAAA,UAAArE,EAAAqE,IAAArC,WAAA,UAAAhC,EAAAvB,OAAAuB,EAAAxB,MAAA6F,GAAAtF,KAAAQ,OAAA,OAAAR,KAAAqC,KAAAiD,EAAA1C,WAAAhD,GAAAI,KAAAuF,SAAAtE,IAAAsE,SAAA,SAAAtE,EAAA4B,GAAA,aAAA5B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAqC,KAAApB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAA+E,KAAA/E,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAqC,KAAA,kBAAApB,EAAAvB,MAAAmD,IAAA7C,KAAAqC,KAAAQ,GAAAjD,GAAA4F,OAAA,SAAA5C,GAAA,QAAAW,EAAAvD,KAAA8C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzC,KAAA8C,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA5C,KAAAuF,SAAA9C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,IAAA6F,MAAA,SAAA/C,GAAA,QAAAa,EAAAvD,KAAA8C,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAAzC,KAAA8C,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAAzB,EAAAwB,EAAAQ,WAAA,aAAAhC,EAAAvB,KAAA,KAAAgG,EAAAzE,EAAAxB,IAAAuD,EAAAP,GAAA,OAAAiD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAf,EAAAE,GAAA,OAAAtC,KAAAwB,SAAA,CAAAvD,SAAAmC,EAAA+C,GAAAf,aAAAE,WAAA,SAAAtC,KAAAQ,SAAAR,KAAAP,SAAAuC,GAAApC,IAAAzC,EAGAyI,IAAMC,SAASC,QAAU,8CAElB,cAAMC,EAAgBC,YAC3B,oBAAmB,eAAAC,EAAA5I,OAAA6I,EAAA,EAAA7I,CAAAH,IAAA2G,KACnB,SAAAsC,EAAOC,EAACC,GAAA,IAAAC,EAAAC,EAAA,OAAArJ,IAAAyB,KAAA,SAAA6H,GAAA,cAAAA,EAAA9B,KAAA8B,EAAAnE,MAAA,OAAmB,OAAfiE,EAAeD,EAAfC,gBAAeE,EAAA9B,KAAA,EAAA8B,EAAAnE,KAAA,EAEAuD,IAAMa,IAAI,aAAY,OAA/B,OAARF,EAAQC,EAAA7E,KAAA6E,EAAA1E,OAAA,SACPyE,EAASG,MAAI,cAAAF,EAAA9B,KAAA,EAAA8B,EAAAG,GAAAH,EAAA,SAAAA,EAAA1E,OAAA,SAEbwE,EAAgBE,EAAAG,GAAEC,UAAQ,yBAAAJ,EAAA3B,SAAAsB,EAAA,iBAEpC,gBAAAU,EAAAC,GAAA,OAAAb,EAAAc,MAAA/G,KAAAgH,YARkB,IAWRC,EAAcjB,YACzB,sBAAqB,eAAAkB,EAAA7J,OAAA6I,EAAA,EAAA7I,CAAAH,IAAA2G,KACrB,SAAAsD,EAAOC,EAASC,GAAA,IAAAf,EAAAC,EAAA,OAAArJ,IAAAyB,KAAA,SAAA2I,GAAA,cAAAA,EAAA5C,KAAA4C,EAAAjF,MAAA,OAAmB,OAAfiE,EAAee,EAAff,gBAAegB,EAAA5C,KAAA,EAAA4C,EAAAjF,KAAA,EAERuD,IAAM2B,KAAK,YAAa,CAC7CxK,KAAMqK,EAAUrK,KAChByK,MAAOJ,EAAUI,QACjB,OAHY,OAARjB,EAAQe,EAAA3F,KAAA2F,EAAAxF,OAAA,SAIPyE,EAASG,MAAI,cAAAY,EAAA5C,KAAA,EAAA4C,EAAAX,GAAAW,EAAA,SAAAA,EAAAxF,OAAA,SAEbwE,EAAgBgB,EAAAX,GAAEC,UAAQ,yBAAAU,EAAAzC,SAAAsC,EAAA,iBAEpC,gBAAAM,EAAAC,GAAA,OAAAR,EAAAH,MAAA/G,KAAAgH,YAXoB,IAcVW,EAAiB3B,YAC5B,yBAAwB,eAAA4B,EAAAvK,OAAA6I,EAAA,EAAA7I,CAAAH,IAAA2G,KACxB,SAAAgE,EAAOC,EAASC,GAAA,IAAAzB,EAAAC,EAAA,OAAArJ,IAAAyB,KAAA,SAAAqJ,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA3F,MAAA,OAAmB,OAAfiE,EAAeyB,EAAfzB,gBAAe0B,EAAAtD,KAAA,EAAAsD,EAAA3F,KAAA,EAERuD,IAAMqC,OAAM,aAAAC,OAAcJ,IAAY,OAA/C,OAARvB,EAAQyB,EAAArG,KAAAqG,EAAAlG,OAAA,SACPyE,EAASG,MAAI,cAAAsB,EAAAtD,KAAA,EAAAsD,EAAArB,GAAAqB,EAAA,SAAAA,EAAAlG,OAAA,SAEbwE,EAAgB0B,EAAArB,GAAEC,UAAQ,yBAAAoB,EAAAnD,SAAAgD,EAAA,iBAEpC,gBAAAM,EAAAC,GAAA,OAAAR,EAAAb,MAAA/G,KAAAgH,YARuB,kBChCbqB,EAAOC,IAAOC,KAAIC,MAAAnL,OAAAoL,EAAA,EAAApL,CAAA,iFAMlBqL,EAAQJ,IAAOK,MAAKC,MAAAvL,OAAAoL,EAAA,EAAApL,CAAA,6FAMpBwL,EAAQP,IAAOQ,MAAKC,MAAA1L,OAAAoL,EAAA,EAAApL,CAAA,yBCR3B2L,EAAmB,CACvBjM,KAAM,GACNyK,MAAO,IAGHyB,EAAc,SAAC7M,EAAO8M,GAC1B,OAAQA,EAAOxJ,MACb,IAAK,aACH,OAAOrC,OAAA8L,EAAA,EAAA9L,CAAA,GACFjB,EAAMiB,OAAAI,EAAA,EAAAJ,CAAA,GACR6L,EAAOE,MAAQF,EAAOG,UAEzB,IAAK,aACH,MAAO,CACLtM,KAAM,GACNyK,MAAO,IAEb,QACE,OAAOpL,IAGE,SAASkN,IACtB,IAAMC,EAAWC,cACXnN,EAAWoN,YAAYtN,GAAgBuN,EACXC,qBAAWV,EAAaD,GAAiBY,EAAAvM,OAAAwM,EAAA,EAAAxM,CAAAqM,EAAA,GAApEtC,EAASwC,EAAA,GAAEE,EAAYF,EAAA,GAmBxBG,EAAmB,SAACC,GACxBF,EAAa,CACXpK,KAAM,aACN0J,MAAOY,EAAEC,OAAOlN,KAChBsM,QAASW,EAAEC,OAAOpM,SAGtB,OACEqM,EAAAC,EAAAC,cAAC/B,EAAI,CAACgC,SAzBa,SAAAL,GACnBA,EAAEM,iBACEjO,EAASkO,KAAK,SAAAzN,GAAO,OAAIA,EAAQC,OAASqK,EAAUrK,OACtDyN,MAAM,kDAEGnO,EAASkO,KAAK,SAAAzN,GAAO,OAAIA,EAAQ0K,QAAUJ,EAAUI,QAC9DgD,MAAK,GAAAtC,OAAId,EAAUI,MAAK,8BAG1B+B,EAAStC,EAAYG,IACrB0C,EAAa,CACXpK,KAAM,aACN3C,KAAM,GACNyK,MAAO,QAaP0C,EAAAC,EAAAC,cAAC1B,EAAK,YAEJwB,EAAAC,EAAAC,cAACvB,EAAK,CACJ4B,SAAU,SAACT,GAAC,OAAKD,EAAiBC,IAClCnM,MAAOuJ,EAAUrK,KACjB2C,KAAK,OACL3C,KAAK,OACL2N,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGZV,EAAAC,EAAAC,cAAC1B,EAAK,cAEJwB,EAAAC,EAAAC,cAACvB,EAAK,CACJ4B,SAAU,SAACT,GAAC,OAAKD,EAAiBC,IAClCnM,MAAOuJ,EAAUI,MACjB9H,KAAK,MACL3C,KAAK,QACL2N,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGZV,EAAAC,EAAAC,cAAA,UAAQ1K,KAAK,UAAQ,gBChFpB,cAAMmL,EAAOvC,IAAOwC,GAAEC,MAAA1N,OAAAoL,EAAA,EAAApL,CAAA,gGAOhB2N,EAAO1C,IAAO2C,GAAEC,MAAA7N,OAAAoL,EAAA,EAAApL,CAAA,qGCiBd8N,EApBK,WAClB,IAAM5B,EAAWC,cACX4B,EAAc3B,YAAY9M,GAEhC,OACEuN,EAAAC,EAAAC,cAACS,EAAI,KACFO,EAAYC,IAAI,SAAAvO,GAAO,OACtBoN,EAAAC,EAAAC,cAACY,EAAI,CAACrN,IAAKb,EAAQwO,IACjBpB,EAAAC,EAAAC,cAAA,SACGtN,EAAQC,KAAI,MAAKD,EAAQ0K,OAE5B0C,EAAAC,EAAAC,cAAA,UAAQmB,QAAS,kBAAMhC,EAAS5B,EAAe7K,EAAQwO,OAAK,eCbzDE,EAAcC,YAAY,CACrC1O,KAAM,SACN2O,aAJmB,CAAC7O,OAAQ,IAK5B8O,SAAU,CACRC,eAAc,SAACxP,EAAO8M,GACpB9M,EAAMS,OAASqM,EAAOG,YAKfwC,EAAgBL,EAAYM,QAC1BF,EAAmBJ,EAAYO,QAA/BH,eCbFlD,EAAQJ,IAAOK,MAAKqD,MAAA3O,OAAAoL,EAAA,EAAApL,CAAA,6FAMpBwL,EAAQP,IAAOQ,MAAKmD,MAAA5O,OAAAoL,EAAA,EAAApL,CAAA,8CCYlB6O,EAfA,WACb,IAAM3C,EAAWC,cAKjB,OACEU,EAAAC,EAAAC,cAAC+B,EAAK,6BAEJjC,EAAAC,EAAAC,cAACgC,EAAK,CACL1M,KAAK,OAAO+K,SARM,SAAAT,GACrB,OAAOT,EAASqC,EAAe5B,EAAEqC,cAAcxO,aCNtCyO,EAAYhE,IAAOiE,IAAGC,MAAAnP,OAAAoL,EAAA,EAAApL,CAAA,qGAOtBoP,EAAQnE,IAAOoE,GAAEC,MAAAtP,OAAAoL,EAAA,EAAApL,CAAA,qHAQjBuP,EAActE,IAAOuE,GAAEC,MAAAzP,OAAAoL,EAAA,EAAApL,CAAA,qHCR7B,SAAS0P,IACd,IAAMxD,EAAWC,cACXhN,EAAYiN,YAAYlN,GACxBG,EAAQ+M,YAAYhN,GAM1B,OAJAuQ,oBAAU,WACRzD,EAASxD,MACR,CAACwD,IAGFW,EAAAC,EAAAC,cAACkC,EAAS,KACRpC,EAAAC,EAAAC,cAACqC,EAAK,kBACNvC,EAAAC,EAAAC,cAACd,EAAW,MACZY,EAAAC,EAAAC,cAACwC,EAAW,iBACZ1C,EAAAC,EAAAC,cAAC6C,EAAM,MACNzQ,IAAcE,GAASwN,EAAAC,EAAAC,cAAA,mCACxBF,EAAAC,EAAAC,cAAC8C,EAAW,0BCtBZC,GAAe,CAACpH,EAAekB,EAAaU,GAE5CyF,GAAa,SAAA1N,GAAI,OAAIyN,GAAa9B,IAAI,SAAAnC,GAAM,OAAIA,EAAOxJ,MAEvD2N,GAA8B,SAACjR,EAAO8M,GAC1C9M,EAAME,MAAQ4M,EAAOG,SAGjBiE,GAA2B,SAAClR,EAAO8M,GACvC9M,EAAME,MAAMyG,KAAKmG,EAAOG,UAGpBkE,GAA8B,SAACnR,EAAO8M,GAC1C,IAAMsE,EAAQpR,EAAME,MAAMmR,UACxB,SAAA3Q,GAAO,OAAIA,EAAQwO,KAAOpC,EAAOG,QAAQiC,KAE3ClP,EAAME,MAAMoR,OAAOF,EAAO,IAGtBG,GAAiB,SAAAvR,GACrBA,EAAMI,WAAY,GAGdoR,GAAkB,SAACxR,EAAO8M,GAC9B9M,EAAMI,WAAY,EAClBJ,EAAMM,MAAQwM,EAAOG,SAGjBwE,GAAmB,SAAAzR,GACvBA,EAAMI,WAAY,EAClBJ,EAAMM,MAAQ,MAqBHoR,GAlBSrC,YAAY,CAChC1O,KAAM,WACN2O,aAAc,CACZpP,MAAO,GACPE,WAAW,EACXE,MAAO,MAETqR,cAAe,SAAAC,GACbA,EACGC,QAAQlI,EAAcmI,UAAWb,IACjCY,QAAQhH,EAAYiH,UAAWZ,IAC/BW,QAAQtG,EAAeuG,UAAWX,IAClCY,WAAWC,IAAOrH,WAAA,EAAA1J,OAAAgR,GAAA,EAAAhR,CAAI+P,GAAW,aAAaO,IAC9CQ,WAAWC,IAAOrH,WAAA,EAAA1J,OAAAgR,GAAA,EAAAhR,CAAI+P,GAAW,cAAcQ,IAC/CO,WAAWC,IAAOrH,WAAA,EAAA1J,OAAAgR,GAAA,EAAAhR,CAAI+P,GAAW,eAAeS,OAIV/B,QClDhCwC,GAAQC,YAAe,CAClCzC,QAAS,CACPzP,SAAUyR,GACVjR,OAAQgP,KCAZ2C,IAASC,WAAWC,SAASC,eAAe,SAASC,OACnD1E,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,WAAU,KACf3E,EAAAC,EAAAC,cAAC0E,EAAA,EAAQ,CAACR,MAAOA,IACbpE,EAAAC,EAAAC,cAAC2C,EAAG","file":"static/js/main.68e343b9.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectContactsFilter = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://637e17aecfdbfd9a63a6f865.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get('/contacts');\n      return response.data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  }\n);\n\nexport const addContacts = createAsyncThunk(\n  'contacts/addContact',\n  async (formState, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('/contacts', {\n        name: formState.name,\n        phone: formState.phone,\n      });\n      return response.data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  }\n);\n\nexport const deleteContacts = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const response = await axios.delete(`/contacts/${contactId}`);\n      return response.data;\n    } catch (e) {\n      return rejectWithValue(e.message);\n    }\n  }\n);\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  `\n\nexport const Label = styled.label`\n  display:flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  width: 200px;`\n\nexport const Input = styled.input`\n  height: 25px;`\n","import React, { useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContacts } from '../../redux/operations';\nimport { Form, Label, Input } from './ContactForm.styled';\n\nconst initialFormState = {\n  name: '',\n  phone: '',\n};\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'input text':\n      return {\n        ...state,\n        [action.field]: action.payload,\n      };\n      case 'clear text':\n        return {\n          name: '',\n          phone: '',\n        }\n    default:\n      return state;\n  }\n};\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [formState, setFormState] = useReducer(formReducer, initialFormState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === formState.name)) {\n      alert('a contact with this name is already registered');\n      return;\n    } else if (contacts.find(contact => contact.phone === formState.phone)) {\n      alert(`${formState.phone} is already in contacts.`);\n      return;\n    }\n    dispatch(addContacts(formState));\n    setFormState({\n      type: \"clear text\",\n      name: '',\n      phone: '',\n    })\n  };\n\n  const handleTextChange = (e) => {\n    setFormState({\n      type: \"input text\",\n      field: e.target.name,\n      payload: e.target.value\n    })\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={(e) => handleTextChange(e)}\n          value={formState.name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={(e) => handleTextChange(e)}\n          value={formState.phone}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 300px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px;`\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsFilter } from '../../redux/selectors';\nimport { deleteContacts } from '../../redux/operations';\nimport { Item, List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectContactsFilter);\n\n  return (\n    <List>\n      {contactList.map(contact => (\n        <Item key={contact.id}>\n          <p>\n            {contact.name} : {contact.phone}\n          </p>\n          <button onClick={() => dispatch(deleteContacts(contact.id))}>\n            Delete\n          </button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {filter: '',};\n\nexport const filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    setFilterState(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const filterReducer = filterSlice.reducer;\nexport const { setFilterState } = filterSlice.actions;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display:flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  width: 200px;`\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  height: 25px;`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterState } from '../../redux/filterSlice';\nimport { Input, Label } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    return dispatch(setFilterState(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n       type=\"text\" onChange={onChangeFilter}></Input>\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 80px auto;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n  font-weight: 900;\n  color: #2c2d2e;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n\nexport const SecondTitle = styled.h2`\n  font-size: 28px;\n  font-weight: 900;\n  color: #2c2d2e;\n  text-align: center;\n  margin-bottom: 40px;\n`;\n","import React, { useEffect } from 'react';\nimport ContactForm from '../contactForm/ContactForm';\nimport ContactList from '../contactList/ContactList';\nimport Filter from '../filter/Filter';\nimport { Container, Title, SecondTitle } from './App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/operations';\nimport { selectError, selectIsLoading } from '../../redux/selectors';\n\nexport function App() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SecondTitle>Contacts</SecondTitle>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </Container>\n  );\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport { addContacts, deleteContacts, fetchContacts } from './operations';\n\nconst extraActions = [fetchContacts, addContacts, deleteContacts];\n\nconst getActions = type => extraActions.map(action => action[type]);\n\nconst fetchContactsSucceesReducer = (state, action) => {\n  state.items = action.payload;\n};\n\nconst addContactSuccessReducer = (state, action) => {\n  state.items.push(action.payload);\n};\n\nconst deleteContactSuccessReducer = (state, action) => {\n  const index = state.items.findIndex(\n    contact => contact.id === action.payload.id\n  );\n  state.items.splice(index, 1);\n};\n\nconst pendingReducer = state => {\n  state.isLoading = true;\n};\n\nconst rejectedReducer = (state, action) => {\n  state.isLoading = false;\n  state.error = action.payload;\n};\n\nconst fulfilledReducer = state => {\n  state.isLoading = false;\n  state.error = null;\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    isLoading: false,\n    error: null,\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchContacts.fulfilled, fetchContactsSucceesReducer)\n      .addCase(addContacts.fulfilled, addContactSuccessReducer)\n      .addCase(deleteContacts.fulfilled, deleteContactSuccessReducer)\n      .addMatcher(isAnyOf(...getActions('pending')), pendingReducer)\n      .addMatcher(isAnyOf(...getActions('rejected')), rejectedReducer)\n      .addMatcher(isAnyOf(...getActions('fulfilled')), fulfilledReducer);\n  }\n});\n\nexport const contactsReducer = contactsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contactSlice';\nimport { filterReducer } from './filterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from './components/App/App';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}